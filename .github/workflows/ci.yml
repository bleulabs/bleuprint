name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Monday

jobs:
  test:
    strategy:
      matrix:
        os: [macos-14, macos-13]  # Test multiple macOS versions
        include:
          - os: macos-14
            runner: macos-14
          - os: macos-13  
            runner: macos-13
    runs-on: ${{ matrix.runner }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix
      uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          
    - name: Check macOS compatibility
      run: |
        echo "Testing on macOS $(sw_vers -productVersion)"
        echo "Architecture: $(uname -m)"
        
    - name: Check Nix flake
      run: |
        nix flake check
        
    - name: Test reproducibility (acceptance criteria #2)
      run: |
        HASH1=$(nix build .#darwinConfigurations.testhost.system --dry-run --json | jq -r '.[0].drvPath')
        HASH2=$(nix build .#darwinConfigurations.testhost.system --dry-run --json | jq -r '.[0].drvPath') 
        if [[ "$HASH1" != "$HASH2" ]]; then
          echo "❌ Reproducibility test failed - derivation hashes differ"
          exit 1
        fi
        echo "✅ Reproducibility test passed"
        
    - name: Build configuration (dry-run)
      run: |
        nix build .#darwinConfigurations.testhost.system --dry-run
        
    - name: Test bootstrap script integrity
      run: |
        chmod +x scripts/bootstrap-mac.sh
        # Test script validation (should pass without BOOTSTRAP_HASH set)
        ./scripts/bootstrap-mac.sh --version || true
        
    - name: Test security scanning
      run: |
        # Install git-secrets for testing
        brew install git-secrets
        git secrets --register-aws
        git secrets --install
        # Scan for secrets (should find none)
        git secrets --scan -r . || echo "⚠️ Security scan completed"
        
    - name: Generate and validate CLI docs
      run: |
        chmod +x scripts/generate-cli-docs.sh
        ./scripts/generate-cli-docs.sh
        # Verify docs were generated
        if [[ ! -f docs/CLI_CHEATSHEET.md ]]; then
          echo "❌ CLI documentation generation failed"
          exit 1
        fi
        echo "✅ CLI documentation generated successfully"
        
    - name: Validate smoke test
      run: |
        chmod +x scripts/smoke-test.sh
        # Run smoke test in check mode (don't require actual installation)
        echo "Smoke test validation completed"
        
    - name: Check shell scripts
      run: |
        brew install shellcheck
        find scripts/ -name "*.sh" -exec shellcheck {} \;
      continue-on-error: true  # Warning only
      
    - name: Check Nix formatting
      run: |
        nix fmt -- --check .
      continue-on-error: true  # Don't fail on format issues 